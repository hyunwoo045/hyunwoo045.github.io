---
title: "[Jekyll & Github Pages] 개발 블로그 생성 일지 (1)"
excerpt: "1. - Jekyll 환경 구축하기."

header:
  overlay_image: https://images.unsplash.com/photo-1501785888041-af3ef285b470?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1350&q=80
  overlay_filter: 0.5

tags:
  - Github Pages
  - Jekyll
  - Ruby

toc: true
toc_label: "table of content"
toc_icon: "bars"
toc_sticky: true
---

# 시작하기

## 왜?

저는 너무나도 평범한 사람이기 때문에 <s>(혹은 아주 멍청한 사람이기 때문에)</s> 어딘가에 메모해놓지 않으면 리마인드하는 것이 너무나도 어렵습니다. 그래서 아주 간단히 github pages 로 블로그를 만들어 포스트를 작성하며 기록을 하기 시작했고 아주 많지는 않지만 글이 점점 쌓이기 시작했죠.

그러다 문득 블로그가 맘에 안 들기 시작. 가장 결정적으로 안 이뻤고..ㅋㅋ 사용했던 테마의 기능이 부실해보였습니다. 그래서 어차피 평생 쓸 블로그인데 좀 맘에 들게 고치고 커스터마이징까지 어느정도 숙지하여 나중에 또 맘에 안 드는 것이 생기더라도 이 번처럼 아예 싹 다 들어내서 고치지 않도록 해야 겠다는 생각에 대 공사(?)를 시작하게 되었습니다.

이번에 사용한 theme은 `Minimal Mistakes` 라는 테마입니다. [https://jekyllthemes.io/free](https://jekyllthemes.io/free) <- Jekyll 의 무료 테마 중 가장 star 를 많이 받은 테마이니 나중에 뭔가 불만은 없겠죠...?

<br/>

## 참고 자료

- [Jekyll 공식 가이드 문서](https://jekyllrb-ko.github.io/docs/)
- [Minimal Mistakes 공식 가이드 문서](https://mmistakes.github.io/minimal-mistakes/docs/quick-start-guide/)
- [minimal mistakes theme 지킬 블로그 초기 설정하기](https://syki66.github.io/blog/2020/04/12/minimal-mistakes-theme.html)

<br/>

# Jekyll 설치

## Ruby 개발환경 설치

Jekyll 을 설치하기 위해서는 Ruby 2.4.0 보다 높은 버전을 요구합니다. macOS 카탈리나 10.15 이 후는 Ruby 가 기본적으로 포함되어 있으나 이전 버전이라면 새로운 버전의 루비를 설치해야 합니다. 작성자는 Ruby, Gem 환경 설정에서 아주 끔찍한 삽질의 시간을 보냈습니다... 후에 어떤 에러였는지 기록하기로 하고 기본 설치 방법을 기록합니다

```bash
# Ruby 설치
$ brew install ruby

# Homebrew 루비의 경로를 쉘 환경설정에 추가
$ echo 'export PATH="/usr/local/opt/ruby/bin:$PATH"' >> ~/.bash_profile

# Ruby 설치 여부 확인
$ which ruby
$ ruby -v
ruby 2.6.8p205 (2021-07-07 revision 67951) [universal.x86_64-darwin21]
```

루비 설치가 끝났습니다.

<br/>

## rbenv 로 루비 버전 관리

rbenv 는 루비 버전을 관리해주는 도구입니다. 각각 프로젝트마다 다른 버전의 루비를 설정할 때 유용하다고 합니다. 자세한 것은 이번 포스트에 중요한 것은 아니니 넘어가도록 하고, Jekyll 공식 홈페이지에서 소개하는 사용법만 간단히 기록해둡니다.

```bash
# rbenv 설치
$ brew install rbenv

# 쉘 환경에 rbenv 가 연동되도록 설정
$ rbenv init

# ruby 버전 설치 및 버전 설정(global)
$ rbenv install 2.6.8
$ rbenv global 2.6.8

# 설정 후 터미널을 재 시작해야 함.
$ ruby -v
ruby 2.6.8p205 (2021-07-07 revision 67951) [universal.x86_64-darwin21]
```

<br/>

## Jekyll 설치

사전 작업이 끝났으니, Jekyll 과 Bundler 를 설치 합니다.

```bash
$ gem install --user-install bundler jekyll
```

이 과정에서 저는 설치가 잘 안됬었는데요. jekyll 의 의존 모듈인 ffi 가 설치가 안되는 것이 문제였습니다.

여러 해결 방법을 시도해봤고,

- Ruby 재 설치
- Ruby 버전 변경
- `gem update`
- 환경 설정의 경로 수정

그 중 성공 사례는 아래의 내용입니다.

```bash
$ sudo rm -rf /Library/Developer/CommandLineTools
$ xcode-select --install
```

네. CommendLineTools 를 지우고 다시 설치하니 jekyll 과 bundler 가 잘 설치가 되더랍니다 :D

설치가 잘 완료되었다면 로컬 프로젝트 폴더에 blog 프로젝트를 생성합니다

```bash
# 프로젝트 생성
$ jekyll new myblog

# 이동
$ cd myblog

# 빌드 후 로컬 서버에 적용
$ bundle exec jekyll serve
```

브라우저에 `http://localhost:4000` 으로 접속하면 Jekyll 의 기본 페이지가 나타날 것입니다.

<br/>

# Minimal Mistakes 테마 적용

[Minimal Mistakes 공식 가이드 문서 - 설치](https://mmistakes.github.io/minimal-mistakes/docs/installation/) 에 ZIP 파일을 다운하는 버튼이 있습니다. 이를 내려받아서 myblog 폴더에 덮어써줍니다. 그리고 `Gemfile` 에 의존성을 정의해줍니다.

```bash
source "https://rubygems.org"


# 공식적으로는 jekyll 으로 설정하지만
gem "jekyll"
# Github Pages 를 사용할 목적이라면 위 gem "jekyll" 을 삭제하고 아래를 작성
gem "github-pages"


gem "minimal-mistakes-jekyll"
group :jekyll_plugins do
end
```

이제 의존성을 설치해줍니다.

```bash
$ bundle install

# 혹은 bundle update
```

Minimal mistakes 테마를 사용할 준비를 마쳤습니다. 이제 serve 하여 페이지를 확인해봅시다.

```bash
$ bundle exec jekyll serve
```

아래와 같은 페이지가 보인다면 성공입니다 :)

![minimal-mistakes 초기화면](/images/minimal-mistakes-blog/1.png)

다음에는 커스터마이징하는 방법을 알아보도록 하겠습니다.
